setwd("/Users/jasondamiani/Udacity/Data Analysis with R/problem_set3/")
electricity <- read.csv("Electricity Generation.xls.csv", as.is = TRUE, stringsAsFactors = FALSE)
?as.data.frame
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
qplot(x = age, y = friend_count, data = pf)
?setwd
setwd('C:\Users\jdamiani\Udacity\Data-Analysis-with-R\lesson4')
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
qplot(x = age, y = friend_count, data = pf)
setwd('C:/Users/jdamiani/Udacity/Data-Analysis-with-R/lesson4')
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
qplot(x = age, y = friend_count, data = pf)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point() +
xlim(13, 90)
summary(pf$age)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = "sqrt")
install.packages('dplyr')
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
pf.fc_by_age_chained <- pf %>% group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
library(dplyr)
install.packages('dplyr')
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
source('~/.active-rstudio-document', echo=TRUE)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "orange") +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "orange") +
xlim(13, 90) +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "orange") +
xlim(13, 90) +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = 0.1,
linetype = 2,
color = "blue")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "orange") +
xlim(13, 90) +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = 0.1,
linetype = 2,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.9,
linetype = 2,
color = "blue")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "orange") +
xlim(13, 90) +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = 0.1,
linetype = 2,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.5,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.9,
linetype = 2,
color = "blue")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "orange") +
coord_cartesian(xlim = c(13, 90)) +
coord_trans(y = "sqrt") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = 0.1,
linetype = 2,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.5,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.9,
linetype = 2,
color = "blue")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
coord_cartesian(xlim = c(13, 70), ylim = c(0, 1000)) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = "orange") +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile, probs = 0.1,
linetype = 2,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.5,
color = "blue") +
geom_line(stat = "summary", fun.y = quantile, probs = 0.9,
linetype = 2,
color = "blue")
?cor.test
cor.test(pf$age, pf$friend_count)
with(pf[pf.age <= 70], cor.test(age, friend_count))
with(pf[age <= 70], cor.test(age, friend_count))
with(pf[pf$age <= 70], cor.test(age, friend_count))
with(pf[pf$age <= 70,], cor.test(age, friend_count))
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point()
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
coord_cartesian(xlim = c(0, 50000))
geom_point()
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
coord_cartesian(xlim = c(0, 50000)) +
geom_point()
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
coord_cartesian(xlim = c(0, 10000)) +
geom_point()
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 50000)) +
geom_point()
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
coord_cartesian(xlim = c(0, 10000), ylim = c(0, 30000)) +
geom_point(alpha = 0.05)
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
coord_cartesian(xlim = c(0, 2500), ylim = c(0, 10000)) +
geom_point(alpha = 0.05)
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point(alpha = 0.05) +
coord_cartesian(xlim = c(0, quantile(pf$www_likes_received, 0.95)),
ylim = c(0, quantile(pf$likes_received, 0.95))) +
geom_smooth(method = "lm", color = "red")
pf.subset = subset(pf, www_likes_received > quantile(www_likes_received, 0.95) & likes_received > quantile(likes_received, 0.95))
cor.test(pf.subset$www_likes_received, pf.subset$likes_received)
cor.test(pf.subset$www_likes_received, pf.subset$likes_received)
cor.test(pf$www_likes_received, pf$likes_received)
install.packages('alr3')
library(alr3)
data(Mitchell)
?Mitchell
head(Mitchell)
ggplot(aes(x = Month, y = Temp), data = Mitchell) +
geom_point()
cor.test(Mitchell$Month, Mitchell$Temp)
ggplot(aes(x = Month, y = Temp), data = Mitchell) +
geom_point() +
scale_x_discrete(breaks = seq(0, 203, 12))
View(pf)
pf$age_with_months <- pf$age + pf$dob_month/12
View(pf)
pf$age_with_months <- pf$age + (12 - pf$dob_month)/12
View(pf)
pf.fc_by_age_months <- pf %>% group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
head(pf.fc_by_age_months)
View(pf.fc_by_age_months)
ggplot(aes(x = age_with_months, y = friend_count_mean), data = pf.fc_by_age_months[age_with_months < 71,]) +
geom_line()
ggplot(aes(x = age_with_months, y = friend_count_mean), data = pf.fc_by_age_months[pf.fc_by_age_months$age_with_months < 71,]) +
geom_line()
library(ggplot2)
data(diamonds)
head(diamonds)
geom_point()
ggplot(aes(x = price, y = x), data = diamonds) +
geom_point()
ggplot(aes(x = price, y = x), data = diamonds) +
geom_point(alpha = 0.05)
cor.test(diamonds$price, diamonds$x)
cor.test(diamonds$price, diamonds$y)
cor.test(diamonds$price, diamonds$z)
ggplot(aes(x = price, y = depth), data = diamonds) +
geom_point(alpha = 0.05)
?scale_X_continuous
?scale_x_continuous
?c
ggplot(aes(x = price, y = depth), data = diamonds) +
geom_point(alpha = 0.05)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(0,max(diamonds$price),2))
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(min(diamonds$depth),max(diamonds$depth),2))
cor.test(diamonds$price, diamonds$depth)
?subset
?quantile
ggplot(aes(x = price, y = carat),
data = subset(diamonds,
price <= quantile(price, probs = 0.99) & carat <= quantile(carat, probs = 0.99))) +
geom_point()
ggplot(aes(x = price, y = carat), data = diamonds) +
geom_point()
ggplot(aes(x = carat, y = price),
data = subset(diamonds,
price <= quantile(price, probs = 0.99) & carat <= quantile(carat, probs = 0.99))) +
geom_point()
diamonds$volume <- with(diamonds, x*y*z)
View(diamonds)
ggplot(aes(x = volume, y = price), data = diamonds) +
geom_point()
?with
with(subset(diamonds, volume > 0 & volume < 800), cor.test(price, volume))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume < 800)) +
geom_point(alpha = 0.01) +
geom_smooth()
?geom_smooth
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume > 0 & volume < 800)) +
geom_point(alpha = 0.01) +
stat_smooth(method = "lm")
